Known Quantities
    Curator
    [ ] LoadFromFs
    Database
    [ ] ozo dependency
    [ ] Database
    [ ] Work Sessions

Curator Rabbit Holes
    Algorithms
    [ ] Serialize snapshots
    [ ] Rewind blocks
    Subscriptions
    [ ] Validator::NewBlock
    API
    [ ] GetNextBlock
    Events
    [ ] ValidatorLeaving
    [ ] ValidatorLeft


Questions:
    - How does validator know when its initialized (has all the blocks)
    - How do microservices request the p2p service to request stuff from the peers
        - Internal API port
        - OR The p2p service should have this logic (pull threads), to keep all other services simple

High level tasks:
    - Find and connect to peers
    - Validate a transaction/block
        - Summize how much coins is associated with an address
    - Vote on who the next validator is




fluffycoin-whois
    API
    [ ] LookupAddress: Get latest info related to an address
    [ ] GetNextPeer: 
    [ ] PeerUpdate
    Events
    [ ] NewBlock

fluffycoin-builder
    API
    [ ] GetNextBlock
    Events
    [ ] NewTransaction
    [ ] NewBlock

fluffycoin-sync
    API
    [ ] TODO

database module
    [ ] Finalize Schema
    [ ] Database creation
    [ ] Work sessions
    [ ] Async query wrapper

P2P service
    Event Loops
    [ ] Find Peers
    [ ] Collect Missing Blocks
    API
    [\] Handshake
        [\] ValidatorLookup
            [ ] ValidatorInfo
        [ ] Authenticator
        [ ] Client Handshake
    [ ] GetBlock
    [ ] Get info on latest block
    [ ] VoteValidator
    [ ] VoteProtocolChange
    [ ] GetPeers
    [ ] RelayMessage
    [ ] SubmitTransaction
    Events
    [ ] NewBlock
    [ ] ValidateBlock
    [ ] NewTransaction

Unit Tests
    [ ] Service

Misc
    [ ] protobuf Serialize default enum

Design
    [ ] Async client
    [ ] Event auth

consistency
    [ ] namespace ::
    [ ] multi-line params
    [ ] EOF newline

database
    [ ] PSQL dependency
    [ ] ozo dependency

Design
    APIs
    [ ] Validator
    [ ] Kiosk
    [ ] Registry
    Maths
    [ ] Lottery
    [ ] Transaction fees
    [ ] Karma
    [ ] Leader election
    [ ] Loans
    [ ] Stocks
    Blocks
    [ ] NFTs
        [ ] Delete
    [ ] Statements
    [ ] Constitutions
    [ ] Stocks
        [ ] Calls/Puts
        [ ] Bids/Accepts/Cancel
    [ ] McBuck sub-borrowers
    Design review
    [ ] How long do social votes last?
    [ ] Futures invent
    [ ] Change stake amount
    Algorithm design
    [ ] Lottery
    [ ] Gas (catnip)
    [ ] Stock dividens
    Database
    [\] Database for tracking blockchain info
    [ ] Algorithm for transaction feeds, choosing leaders, gettting consensus
    [ ] Test harness for network
    Node Types
    Validator: Does the mining (0mq)
    Registrar: Tracks how to contact the peers (0mq)
    Kiosk: Accepts and tracks transactions (HTTP REST)
    Historian: Get information about the blockchain (HTTP REST)

CLI
    [ ] wallet
    [ ] info
    [ ] download
    [ ] validator
    [ ] lottery
    [ ] transfer
    [ ] trinket
    [ ] loans
    [ ] vote
    [ ] stock

Block
    Core
    [ ] ReconciliationContent
    [ ] BlockDecode
    [\] Block
    [ ] Node
    [ ] Transaction
    Mining
    [ ] Register
    [ ] Unregister
    [ ] CredentialChange
    Actions
    [ ] Lottery
    [ ] Donation
    Stock
    [ ] NewPrivateStock
    [ ] NewPublicStock
    Votes
    [ ] VoteAnswer
    [ ] NewVote
    [ ] PublicVote
    Loans
    [ ] NewLoan
    [ ] CancelLoan
    [ ] AcceptLoan
    [ ] ForgiveLoan
    [ ] ForwardLoan
    [ ] PrepayLoan

Database
    [ ] Chains
    [ ] Miners
    [ ] Wallets

Crypto
    [ ] Keys
    [ ] Address
    [ ] Hash

Licensing
    [ ] 3rd party licenses
        [ ] fmt
        [ ] openssl
        [ ] protobuf
        [ ] zmq
        [ ] sodium
        [ ] boost
        [ ] nlohmann
    [ ] Open source promise

Marketing
    fluffyco.in
    fluffycoin.dev
    fluffycoin.us
    fluffycoin.net
    fluffycoin.co
    fluffychain.com
    fluffycoinblockchain.com
